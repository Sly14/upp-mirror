#include "OCE.h"

struct UPP_ALLOC_FUNCTABLE
{
	Standard_Address (*Allocate)(const Standard_Size size);
	void (*Free)(Standard_Address& aStorage);
	Standard_Address (*Reallocate)(Standard_Address& aStorage, const Standard_Size newSize);
	Standard_Integer (*Purge)(void);
};

Standard_IMPORT UPP_ALLOC_FUNCTABLE *GET_UPP_ALLOC_FUNCTABLE(void);

static Standard_Address Allocate(const Standard_Size size)
{
	return malloc(size);
}

void Free(Standard_Address& aStorage)
{
	free(aStorage);
}

static Standard_Address Reallocate(Standard_Address& aStorage, const Standard_Size newSize)
{
	return realloc(aStorage, newSize);
}

static Standard_Integer Purge(void)
{
	return 0;
}

static void SetMemoryManager(void)
{
	UPP_ALLOC_FUNCTABLE *funcTable = GET_UPP_ALLOC_FUNCTABLE();
	funcTable->Allocate = &Allocate;
	funcTable->Free = &Free;
	funcTable->Reallocate = &Reallocate;
	funcTable->Purge = &Purge;
}

INITBLOCK {
	SetMemoryManager();
}
