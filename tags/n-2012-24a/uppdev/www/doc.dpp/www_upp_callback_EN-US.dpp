ITEM("www", "upp", "callback", "EN-US") EXTERNAL
TXT("[a83;%EN-US*R6 $$0,2#31310162474203024125188417583966:caption]")
TXT("[l160;t4167;%EN-US*C+117 $$1,2#88603949442205825958800053222425:")
TXT("package`-title]")
TXT("[b42;a42;%EN-US3 $$2,2#45413000475342174754091244180557:text]")
TXT("[l321;t246;%EN-USC@5;1 $$3,3#20902679421464641399138805415013:co")
TXT("de]")
TXT("[%EN-US3 $$4,4#00000000000000000000000000000000:Default]")
TXT("[l321;%EN-US*C$7 $$5,5#03451589433145915344929335295360:result]")
TXT("[{_}%EN-US ")
TXT("[s0; Callback&]")
TXT("[s1; Callback&]")
TXT("[s2; Callback is a class whose instances represent some sort of ")
TXT("action, ")
TXT("like invoking standalone function, invoking instance method or ")
TXT("invoking a group of other Callbacks.&]")
TXT("[s3; &]")
TXT("[s3; #include <Core/Core.h>&]")
TXT("[s3; &]")
TXT("[s3; struct Foo {&]")
TXT("[s3; -|int x;&]")
TXT("[s3; -|&]")
TXT("[s3; -|void Action()                { Cout() << \"Action: \" << x ")
TXT("<< ")
TXT("'n'; }&]")
TXT("[s3; -|void ActionWithParam(int y)  { Cout() << \"ActionWithParam")
TXT(": ")
TXT("\" << x + y << 'n'; }&]")
TXT("[s3; &]")
TXT("[s3; -|Callback WhenDo;&]")
TXT("[s3; -|void Do()                    { WhenDo(); }&]")
TXT("[s3; &]")
TXT("[s3; -|Foo(int x = 0) : x(x) {}&]")
TXT("[s3; };&]")
TXT("[s3; &]")
TXT("[s3; void Fn()&]")
TXT("[s3; {&]")
TXT("[s3; -|Cout() << \"Fn!\" << 'n';&]")
TXT("[s3; }&]")
TXT("[s3; &]")
TXT("[s3; struct Bar {&]")
TXT("[s3; -|Foo foo;&]")
TXT("[s3; &]")
TXT("[s3; -|void Action() { Cout() << \"foo's Do called\" << 'n'; }&]")
TXT("[s3; -|&]")
TXT("[s3; -|typedef Bar CLASSNAME;&]")
TXT("[s3; -|&]")
TXT("[s3; -|Bar() { foo.WhenDo = THISBACK(Action); }&]")
TXT("[s3; };&]")
TXT("[s3; &]")
TXT("[s3; void Main()&]")
TXT("[s3; {&]")
TXT("[s3; -|Foo a(10);&]")
TXT("[s3; -|Callback cb1 = callback(`&a, `&Foo`::Action);&]")
TXT("[s3; -|Callback cb2 = callback(Fn);&]")
TXT("[s3; -|Callback1<int> cb3 = callback(`&a, `&Foo`::ActionWithPara")
TXT("m);&]")
TXT("[s3; -|Callback cb4 = callback1(`&a, `&Foo`::ActionWithParam, 30")
TXT(");&]")
TXT("[s3; -|&]")
TXT("[s3; -|cb1();&]")
TXT("[s3; -|cb2();&]")
TXT("[s3; -|cb3(10);&]")
TXT("[s3; -|cb4();&]")
TXT("[s3; &]")
TXT("[s3; -|Cout() << \"`-`-`-`-`-`-`-`--n\";&]")
TXT("[s3; -|cb4 << cb2;&]")
TXT("[s3; -|cb4();&]")
TXT("[s3; -|&]")
TXT("[s3; -|Cout() << \"`-`-`-`-`-`-`-`--n\";&]")
TXT("[s3; -|Bar b;&]")
TXT("[s3; -|b.foo.Do();&]")
TXT("[s3; }&]")
TXT("[s3; &]")
TXT("[s3; &]")
TXT("[s4; Output:&]")
TXT("[s4; &]")
TXT("[s5; Action: 10&]")
TXT("[s5; Fn!&]")
TXT("[s5; ActionWithParam: 20&]")
TXT("[s5; ActionWithParam: 40&]")
TXT("[s5; `-`-`-`-`-`-`-`--&]")
TXT("[s5; ActionWithParam: 40&]")
TXT("[s5; Fn!&]")
TXT("[s5; `-`-`-`-`-`-`-`--&]")
TXT("[s5; foo's Do called&]")
TXT("[s5; &]")
TXT("[s5; ")
END_ITEM
