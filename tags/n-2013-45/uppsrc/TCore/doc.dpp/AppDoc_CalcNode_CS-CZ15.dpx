HELP_TOPIC("AppDoc", "", "CalcNode", "CS-CZ windows-1250", "")
HELP_TEXT(
	"[3 $$0,0#00000000000000000000000000000000:Default]\r\n"
	"[b100;a50;*3 $$1,0#23046025415494101427921008701515:Paragraph]\r\n"
	"[{0}%EN-US \r\n"
	"[s0; Výrazový kalkulátor je výpoèetní systém, který umožòuje poèítat \r\n"
	"hodnoty uživatelsky zadaných výrazù. Vstupem pro výpoèet je [/ zdrojový \r\n"
	"text výrazu], což je textový øetìzec obsahující výraz utvoøený \r\n"
	"podle níže popsaných pravidel, a [/ kontext výpoètu], což je vazba \r\n"
	"mezi výrazem a hostitelskou aplikací, ve které je výrazový systém \r\n"
	"použit. Kontext výpoètu mùže podle charakteru aplikace definovat \r\n"
	"napøíklad pøídavné funkce a konstanty v_závislosti na aktuálním \r\n"
	"nastavení a_hodnotách zpracovávaných v_hostitelské aplikaci.&]\r\n"
	"[s0; &]\r\n"
	"[s0; Syntaxe výrazù rámcovì vychází z_konvencí pro výrazy v_[/ programovacím \r\n"
	"jazyce C], obdobnì jako Java nebo JavaScript. Základem výrazu \r\n"
	"jsou [/ literály] (èísla, textové øetìzce uvedené pøímo ve zdrojovém \r\n"
	"textu výrazu), [/ promìnné ](identifikátory odkazující se na konstanty \r\n"
	"nebo funkce podle kontextu výpoètu výrazu) a [/ operátory], pomocí \r\n"
	"nichž lze hodnoty rùznì kombinovat a_zpracovávat.&]\r\n"
	"[s0; &]\r\n"
	"[s0; Základní výrazový systém podporuje práci s_hodnotami následujících \r\n"
	"datových typù:&]\r\n"
	"[s0; &]\r\n"
	"[s0;i150;O0; [* èíslo] (v_plovoucí øádové èárce)&]\r\n"
	"[s0;i150;O0; [* øetìzec] (textová hodnota)&]\r\n"
	"[s0;i150;O0;* datum/èas&]\r\n"
	"[s0;i150;O0; [* pole hodnot] (jednotlivé prvky pole mohou být i rùzných \r\n"
	"typù)&]\r\n"
	"[s0;i150;O0; [* lambda-výraz] (èást výpoèetního výrazu, kterou lze \r\n"
	"pøedávat do funkcí jako parametr)&]\r\n"
	"[s0; &]\r\n"
	"[s0; Kontext výrazu (hostitelská aplikace používající výrazový systém) \r\n"
	"mùže podle svých potøeb rozšiøovat tento základní repertoár o \r\n"
	"další datové typy a_funkce.&]\r\n"
	"[s1; Operátory&]\r\n"
	"[s0; Operátory slouží podobnì jako funkce k_výpoètu hodnot z_jiných \r\n"
	"zdrojových hodnot. Narozdíl od funkce, kterou lze vyvolat zápisem \r\n"
	"[/ identifikátor`_funkce(parametr1, parametr2...)], se operátory \r\n"
	"obvykle používají zpùsobem [/ výraz1 <operátor> výraz2] (tzv. [/ binární \r\n"
	"operátor]), pøípadnì [/ <operátor> výraz] ([/ prefixový unární operátor]). \r\n"
	"Podrobný popis operátory a_funkcí s_povolenými typy parametrù \r\n"
	"naleznete v_èásti \r\n"
	"{:LINK:dpp`:`/`/AppDoc`/`/host`/`/calc`_summary\t\t:}\r\n"
	".&]\r\n"
	"[s0; &]\r\n"
	"[s0; Kromì toho výrazový systém podporuje nìkolik speciálních operátorù \r\n"
	"s_jiným zpùsobem zápisu. Jedná se o_následující operátory:&]\r\n"
	"[s1; `[<p1>, <p2>, <p3>, ...`]: konstruktor pole&]\r\n"
	"[s0; Vložením posloupnosti hodnot nebo výrazù oddìlených èárkami \r\n"
	"do hranatých závorek vznikne pole obsahující zadané hodnoty jako \r\n"
	"své prvky.&]\r\n"
	"[s0; &]\r\n"
	"[s0;* Pøíklad: `[1, 2, 3 + 4`]&]\r\n"
	"[s1; `[<p1> .. <p2>`]: konstruktor posloupnosti&]\r\n"
	"[s0; Pokud do hranatých závorek napíšete dvì èíselné hodnoty nebo \r\n"
	"výrazy oddìlené dvìma teèkami (dvì teèky musí následovat ihned \r\n"
	"po sobì bez mezery), výsledkem takto vytvoøeného výrazu je pole \r\n"
	"obsahující posloupnost hodnot [/ p1, p1 + 1, p1 + 2, p1 + 3] atd. \r\n"
	"až po hodnotu [/ p2]. Pokud rozdíl hodnot [/ p1] a [/ p2 ]není pøesnì \r\n"
	"celoèíselný, poslední prvek pole bude mít hodnotu v_rozsahu [/ `[p2-0.5, \r\n"
	"p2+0.5)]. Pokud je [/ p2 <= p1 - 0.5], je výsledkem prázdné pole \r\n"
	"(pole neobsahující žádný prvek).&]\r\n"
	"[s0; &]\r\n"
	"[s0;* Pøíklad: `[1..7`] = `[1,2,3,4,5,6,7`]&]\r\n"
	"[s1; <p1> ? <p2> : <p3>: podmínìný výraz&]\r\n"
	"[s0; Podmínìný výraz lze použít v_situaci, kdy potøebujete rozhodnout \r\n"
	"pro jednu ze dvou variant na základì platnosti logické podmínky. \r\n"
	"Pøi výpoètu výrazu se nejprve vyhodnotí [/ p1]; pokud je jeho logická \r\n"
	"hodnota pravdivá (je to nenulové èíslo nebo neprázdný textový \r\n"
	"øetìzec), vyhodnotí se dále výraz [/ p2] a jeho hodnota je výsledkem \r\n"
	"celého výrazu ?:. Pokud podmínka neplatí, vyhodnotí se obdobnì \r\n"
	"výraz [/ p3] a výsledkem výrazu je jeho hodnota.&]\r\n"
	"[s0; &]\r\n"
	"[s0;/ [*/ Pøíklad][/ : ][*/ 5 % 2 == 0 ? \"sudé\" : \"liché\"] = \"liché\"&]\r\n"
	"[s1; <p1>{<m1>, <v1>, <m2>, <v2>, ... }: podmínìný výraz s výbìrem&]\r\n"
	"[s0; Pomocí funkce lze vybrat jednu ze zadaných hodnot (výrazù) podle \r\n"
	"hodnoty øídicího výrazu [/ p1]. Pøi výpoètu se nejprve vyhodnotí \r\n"
	"tento výraz; další postup závisí na poètu parametrù v_složených \r\n"
	"závorkách.&]\r\n"
	"[s0; &]\r\n"
	"[s0;i150;O0;/ [*/ 1 parametr][/ : pokud je v_závorkách jen jeden výraz \r\n"
	"(]m1[/ ), otestuje se, zda je hodnota výrazu ]p1 [/ prázdná (][/ \r\n"
	"{:LINK:dpp`:`/`/AppDoc`/`/`:`:`/`/Calc`$Cis`_nullV\tis`_null\t:}\r\n"
	"][/ ). Pokud prázdná není, ponechá se výraz ]p1[/  beze zmìny a vrátí \r\n"
	"se jako výsledek celého zápisu. Pokud je hodnota prázdná, vyhodnotí \r\n"
	"se výraz ]m1[/  a výsledkem celého výrazu {} je pak hodnota ]m1.&]\r\n")
	HELP_TEXT(
	"[s0;i150;O0; [* sudý poèet parametrù]: pokud je poèet parametrù sudý \r\n"
	"(a nenulový), program po vyhodnocení [/ p1] postupnì prochází výrazy \r\n"
	"v_závorkách na [/ lichých pozicích] ([/ m1, m2, m3...]). Každý tento \r\n"
	"výraz vyhodnotí a porovná s hodnotou výrazu [/ p1]; pokud se hodnoty \r\n"
	"shodují, program vyhodnotí a vrátí odpovídající výraz na následující \r\n"
	"sudé pozici ([/ v1, v2, v3...]). Pokud ani jedna z hodnot [/ m1, \r\n"
	"m2, m3]... není rovna [/ p1], je výsledkem výrazu pøímo pùvodní \r\n"
	"[/ p1] beze zmìny.&]\r\n"
	"[s0;i150;O0; [* lichý poèet parametrù]: pokud je poèet parametrù lichý \r\n"
	"(a vìtší než jeden), program po vyhodnocení obdobnì jako v_pøípadì \r\n"
	"sudého poètu parametrù testuje rovnost s_parametry na lichých \r\n"
	"pozicích [/ m1, m2, m3...]. a_v_pøípadì rovnosti vrátí parametr \r\n"
	"na následující nulové pozici. Pokud není nalezena ani v_jednom \r\n"
	"z pøípadù shodná hodnota, program vyhodnotí a_vrátí poslední \r\n"
	"(nepárovou) hodnotu v_závorkách.&]\r\n"
	"[s1; #<výraz>: lambda-výraz&]\r\n"
	"[s0; Lambda výraz se používá v_situacích, kdy je tøeba samotný výpoèetní \r\n"
	"výraz poslat jako parametr do jiné funkce nebo operátoru (v_opaèných \r\n"
	"pøípadech do operátoru nebo funkce pøichází jako parametr až \r\n"
	"[/ vypoètená hodnota] tohoto výrazu). Zpùsob nakládání s_matematickým \r\n"
	"výrazem v_této funkci závisí na charakteru konkrétní funkce. \r\n"
	"Obvykle jde o_to, že v_rámci jiné funkce je potøeba takto pøedaný \r\n"
	"výpoèetní výraz nìkolikrát postupnì vyhodnotit (vypoèítat), pøípadnì \r\n"
	"v_rùzném kontextu, a_získat tak nìkolik výsledkù, které se pak \r\n"
	"dále zpracují.&]\r\n"
	"[s1;*/ [*/ Pøíklad: ][*/ \r\n"
	"{:LINK:dpp`:`/`/AppDoc`/`/`:`:`/`/Calc`$CsumASC\tsum\t:}\r\n"
	"][*/ (`[1..4`], \"x\", #(x * x))] = 1 * 1 + 2 * 2 + 3 * 3 + 4 * 4 \r\n"
	"= 1+4+9+16 = 30&]\r\n"
	"[s1; <výraz>.<identifikátor>: objektové volání funkce&]\r\n"
	"[s0; Operátor [/ teèka] umožòuje zápis nìkterých výrazù zpùsobem pøipomínajícím \r\n"
	"objektové programovací jazyky. Jedná se èistì o nástroj pøehlednìjšího \r\n"
	"zápisu, vnitønì se všechny takovéto zápisy chápou jako volání \r\n"
	"funkcí. Zápis [/ a.id] má stejný význam jako [/ id(a)], zápis a.id(b, \r\n"
	"c, d) je totéž co id(a, b, c, d).&]\r\n"
	"[s0; &]\r\n"
	"[s0;/ [*/ Pøíklad: sin(pi)] = pi.sin = 0, [*/ (1/3).nls(-2)] = nls(1/3, \r\n"
	"-2) = 0,33&]\r\n"
	"[s0; ")
HELP_END
