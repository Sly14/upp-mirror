ITEM("www", "upp", "value", "EN-US") EXTERNAL
TXT("[a83;%EN-US*R6 $$0,2#31310162474203024125188417583966:caption]")
TXT("[l160;t4167;%EN-US*C+117 $$1,2#88603949442205825958800053222425:")
TXT("package`-title]")
TXT("[b42;a42;%EN-US3 $$2,2#45413000475342174754091244180557:text]")
TXT("[l321;t246;%EN-USC@5;1 $$3,3#20902679421464641399138805415013:co")
TXT("de]")
TXT("[%EN-US3 $$4,4#00000000000000000000000000000000:Default]")
TXT("[l321;%EN-US*C$7 $$5,5#03451589433145915344929335295360:result]")
TXT("[{_}%EN-US ")
TXT("[s0; Value&]")
TXT("[s1; Value&]")
TXT("[s2; Value is a class whose instances can store value of any com")
TXT("patible ")
TXT("type.&]")
TXT("[s3; #include <Core/Core.h>&]")
TXT("[s3; &]")
TXT("[s3; void Foo(const Value`& x)&]")
TXT("[s3; {&]")
TXT("[s3; -|Cout() << \"`-`-`-`-`-`--n\";&]")
TXT("[s3; -|Cout() << \"Value: \" << AsString(x) << 'n';&]")
TXT("[s3; -|if(IsError(x)) {&]")
TXT("[s3; -|-|Cout() << \"Value is Error: \" << GetErrorText(x) << 'n';")
TXT("&]")
TXT("[s3; -|-|return;&]")
TXT("[s3; -|}&]")
TXT("[s3; -|if(IsNull(x)) {&]")
TXT("[s3; -|-|Cout() << \"Value is Nulln\";&]")
TXT("[s3; -|-|return;&]")
TXT("[s3; -|}&]")
TXT("[s3; -|if(IsString(x)) {&]")
TXT("[s3; -|-|Cout() << \"Value is String: \" << (String)x << 'n';&]")
TXT("[s3; -|-|return;&]")
TXT("[s3; -|}&]")
TXT("[s3; -|if(IsNumber(x)) {&]")
TXT("[s3; -|-|Cout() << \"Value is a number: \" << (double)x << 'n';&]")
TXT("[s3; -|-|return;&]")
TXT("[s3; -|}&]")
TXT("[s3; -|if(IsDateTime(x)) {&]")
TXT("[s3; -|-|Cout() << \"Value is either date or time: \" << (Date)x <")
TXT("< 'n';&]")
TXT("[s3; -|-|return;&]")
TXT("[s3; -|}&]")
TXT("[s3; -|Cout() << \"Value is of another type: \" << x.GetType() << ")
TXT("'n';&]")
TXT("[s3; }&]")
TXT("[s3; &]")
TXT("[s3; void Main()&]")
TXT("[s3; {&]")
TXT("[s3; -|Foo(12);&]")
TXT("[s3; -|Foo(12.12);&]")
TXT("[s3; -|Foo((int)Null);&]")
TXT("[s3; -|Foo(Null);&]")
TXT("[s3; -|Foo(\"some text\");&]")
TXT("[s3; -|Foo(GetSysDate());&]")
TXT("[s3; -|Foo(White());&]")
TXT("[s3; -|Foo(Rect(1, 2, 3, 4));&]")
TXT("[s3; -|Foo(Point(5, 6));&]")
TXT("[s3; -|Foo(ErrorValue(\"test error\"));&]")
TXT("[s3; }&]")
TXT("[s3; &]")
TXT("[s4; Output:&]")
TXT("[s4; &]")
TXT("[s5; `-`-`-`-`--&]")
TXT("[s5; Value: 12&]")
TXT("[s5; Value is a number: 12&]")
TXT("[s5; `-`-`-`-`--&]")
TXT("[s5; Value: 12.12&]")
TXT("[s5; Value is a number: 12.12&]")
TXT("[s5; `-`-`-`-`--&]")
TXT("[s5; Value: null&]")
TXT("[s5; Value is Null&]")
TXT("[s5; `-`-`-`-`--&]")
TXT("[s5; Value: null&]")
TXT("[s5; Value is Null&]")
TXT("[s5; `-`-`-`-`--&]")
TXT("[s5; Value: 'some text'&]")
TXT("[s5; Value is String: some text&]")
TXT("[s5; `-`-`-`-`--&]")
TXT("[s5; Value: 08.02.2004&]")
TXT("[s5; Value is either date or time: 08.02.2004&]")
TXT("[s5; `-`-`-`-`--&]")
TXT("[s5; Value: Color(255, 255, 255)&]")
TXT("[s5; Value is of another type: 39&]")
TXT("[s5; `-`-`-`-`--&]")
TXT("[s5; Value: `[1, 2`] - `[3, 4`] : (2, 2)&]")
TXT("[s5; Value is of another type: 76&]")
TXT("[s5; `-`-`-`-`--&]")
TXT("[s5; Value: `[5, 6`]&]")
TXT("[s5; Value is of another type: 73&]")
TXT("[s5; `-`-`-`-`--&]")
TXT("[s5; Value: <error: 'test error'>&]")
TXT("[s5; Value is Error: test error&]")
TXT("[s5; ")
END_ITEM
