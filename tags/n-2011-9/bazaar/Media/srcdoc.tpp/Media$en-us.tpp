topic "General description";
[ $$0,0#00000000000000000000000000000000:Default]
[a83;*R6 $$1,0#31310162474203024125188417583966:caption]
[{_}%EN-US 
[s1; [+184 Media]&]
[s0; [2 Video and audio playing and processing for U`+`+.]&]
[s0;2 &]
[ {{10000 [s0;= [2 This package is preliminary so important changes are expected]]}}&]
[s0;2 &]
[s0; [2 It uses LGPL libraries ffmpeg and SDL (SDLCtrl). The instructions 
to install them are ][^topic`:`/`/Media`/srcdoc`/FfmpegInstall`$en`-us^2 here][2 .]&]
[s0;2 &]
[s0;i150;O0; [2 SDL gives audio playing and fast YUV video.]&]
[s0;i150;O0; [2 ffmpeg gives audio and video decoding and encoding.]&]
[s0;2 &]
[s0;2 &]
[s0; [^topic`:`/`/MediaPlayer`/srcdoc`/MediaPlayer`$en`-us^2 MediaPlayer 
package][2  is a demo of MediaPlayer class capabilities.]&]
[s0;2 &]
[s0; [2 So in summary for playing:]&]
[s0;2 &]
[s0;i150;O0; [2 ffmpeg opens the file (.avi, .mp3, ...)]&]
[s0;i150;O0; [2 ffmpeg reads the codified data and converts it in uncompressed 
images and audio chunks.]&]
[s0;i150;O0; [2 SDL displays the images and plays the audio fluently.]&]
[s0;2 &]
[s0;2 &]
[s0; [2 It uses at least 5 threads... plus the main:]&]
[s0;2 &]
[s0;i150;O0; [2 basic data chunks (called packets) retrieval]&]
[s0;i150;O0; [2 audio decoding]&]
[s0;i150;O0; [2 video decoding]&]
[s0;i150;O0; [2 subtitles decoding]&]
[s0;i150;O0; [2 audio playing]&]
[s0;2 &]
[s0;2 &]
[s0; [2 The next immediate steps from now are:]&]
[s0;2 &]
[s0;i150;O0; [2 Solve problems]&]
[s0;i150;O0; [2 Add RGB video playing to do video processing: ][*2 Done]&]
[s0;i150;O0; [2 Reduce number of threads... specially video decoding 
thread has to be removed (it has been the source of many problems)]&]
[s0;2 &]
[s0;2 &]
[s0; [2 Other improvements are:]&]
[s0;2 &]
[s0;i150;O0; [2 Add video and audio encoding (to generate new files, 
.avi. mp3, ...)]&]
[s0;i150;O0; [2 Remove SDL dependencies:]&]
[s0;l160;i150;O0; [2 To do fast image rendering]&]
[s0;l160;i150;O0; [2 Playing audio with PortAudio]&]
[s0; ]